/*!\file $CPNT$_ex.c
** \author SMFSW
** \copyright MIT (c) 2017-2025, SMFSW
** \brief $CPNT$ Driver extensions
** \details $CPNT$:
**/
/****************************************************************/
#include "$CPNT$.h"

#if defined(HAL_I2C_MODULE_ENABLED)
#if defined(I2C_$CPNT$)
/****************************************************************/
// std libs
//#include <math.h>
//#include <stdlib.h>
/****************************************************************/


FctERR $CPNT$_fct(void)
{
	FctERR err;

	err = $CPNT$_Read($CPNT$.$CPNT$_val_1, $CPNT$__REG1, 1);
	if (err)	{ return err; }

	return err;
}


/****************************************************************/


__WEAK void NONNULL__ $CPNT$_INT_GPIO_Init(GPIO_TypeDef * const GPIOx, const uint16_t GPIO_Pin, const GPIO_PinState GPIO_Active) {
	I2C_peripheral_GPIO_init(&$CPNT$.cfg.INT_GPIO, GPIOx, GPIO_Pin, GPIO_Active); }

__WEAK void NONNULL__ $CPNT$_INT_GPIO_Get(bool * const pState) {
	I2C_peripheral_GPIO_get(&$CPNT$.cfg.INT_GPIO, pState); }


__WEAK void NONNULL__ $CPNT$_RST_GPIO_Init(GPIO_TypeDef * const GPIOx, const uint16_t GPIO_Pin, const GPIO_PinState GPIO_Active) {
	I2C_peripheral_GPIO_init(&$CPNT$.cfg.RST_GPIO, GPIOx, GPIO_Pin, GPIO_Active); }

__WEAK void $CPNT$_RST_GPIO_Set(const bool state) {
	I2C_peripheral_GPIO_set(&$CPNT$.cfg.RST_GPIO, state); }


/****************************************************************/
#endif
#endif
/****************************************************************/
