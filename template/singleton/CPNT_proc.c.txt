/*!\file $CPNT$_proc.c
** \author SMFSW
** \copyright MIT (c) 2017-2018, SMFSW
** \brief $CPNT$ Driver procedures
** \details $CPNT$:
**/
/****************************************************************/
#include "$CPNT$.h"

#if defined(HAL_I2C_MODULE_ENABLED)
#if defined(I2C_$CPNT$)
/****************************************************************/
// std libs
//#include <math.h>
//#include <stdlib.h>
/****************************************************************/


$CPNT$_t $CPNT$ = { 0, { &$CPNT$_hal, 0, 0 } };


/****************************************************************/


__WEAK FctERR $CPNT$_Init_Sequence(void)
{
	FctERR err;
	
	// get ID & check against values for $CPNT$
	err = $CPNT$_Get_ChipID(&$CPNT$.cfg.Id);
	if (err)								{ return err; }
	if ($CPNT$.cfg.Id != $CPNT$_CHIP_ID)	{ return ERROR_COMMON; }	// Unknown device
	
	$CPNT$.cfg.$CPNT$_param_1 = 1;
	
	return ERROR_OK;
}


/****************************************************************/


__WEAK FctERR $CPNT$_handler(void)
{
	FctERR err;
	
	err = $CPNT$_Read($CPNT$.$CPNT$_val_1, $CPNT$__REG1, 1);
	if (err)	{ return err; }
	
	#if defined(VERBOSE)
		printf("$CPNT$: FUBARED %d", $CPNT$.$CPNT$_val_1);
	#endif
	
	return ERROR_OK;
}


/****************************************************************/
#endif
#endif
/****************************************************************/
